# -*- coding: utf-8 -*-
"""
Source Code for Implementation of Part 5

@author: Shweta Salian, Raghava Mallik
"""

import nibabel as nib
import matplotlib.pyplot as plt
import numpy as np

# Load the nii image
nii_image_t1 = nib.load('images/t1.nii')
nii_image_t2 = nib.load('images/t2.nii')
nii_image_swi = nib.load('images/swi.nii')
nii_image_tof = nib.load('images/tof.nii')

# Get the image data from nii_image
t1_img = nii_image_t1.get_fdata()
t2_img = nii_image_t2.get_fdata()
swi_img = nii_image_tof.get_fdata()
tof_img = nii_image_swi.get_fdata()


"""
Function to plot t1 and target images of t2,swi and tof
"""
def plot_original_images(target_img, target_img_name):

    # Plot the figure
    fig = plt.figure(figsize=(10, 7))

    # Plotting t1
    fig.add_subplot(1, 2, 1)
    plt.imshow(np.fliplr(np.rot90(np.transpose(t1_img[:, :, t1_img.shape[2]//2]),2)), cmap='jet')
    plt.title('t1')

    # Plotting target image
    fig.add_subplot(1, 2, 2)
    plt.imshow(np.fliplr(np.rot90(np.transpose(target_img[:, :, target_img.shape[2]//2]),2)), cmap='jet')
    plt.title(target_img_name)


    plt.tight_layout()
    plt.show()
 
    
"""
Function to plot the aligned images output
"""
def plot_aligned_images(aligned_image, aligned_img_title):

    # Plot the figure
    fig = plt.figure(figsize=(10, 7))

    fig.add_subplot(1, 3, 1)
    plt.imshow(np.fliplr(np.rot90(np.transpose(aligned_image[aligned_image.shape[2]//2,:,:]),2)), cmap='jet')
    plt.title(f'{aligned_img_title} in t1 view 1')

    fig.add_subplot(1, 3, 2)
    plt.imshow(np.fliplr(np.rot90(np.transpose(aligned_image[:,aligned_image.shape[2]//2,:]),2)), cmap='jet')
    plt.title(f'{aligned_img_title} in t1 view 2')
    
    fig.add_subplot(1, 3, 3)
    plt.imshow(np.fliplr(np.rot90(np.transpose(aligned_image[:,:,aligned_image.shape[2]//2]),4)), cmap='jet')
    plt.title(f'{aligned_img_title} in t1 view 2')
    
    plt.tight_layout()
    plt.show()   
    
    
    
if __name__ == "__main__":

    """
    Below code is to get output for aligning tof image on t1 image
    The output is generated by running below FLIRT SSL command on Ubuntu:
    
    flirt -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -in tof.nii -ref t1.nii -out tof_in_t1_aligned.nii.qz

    flirt -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -cost mutualinfo -in t1.nii -ref tof.nii -out tof_in_t1_aligned_mi.nii.gz
    """
    
    # Load output generated to align tof on t1
    tof_in_t1_aligned = nib.load('images/tof_in_t1_aligned.nii.gz')
    
    # Load output generated to align tof on t1 with -cost mutualinfo
    tof_in_t1_aligned_mi = nib.load('images/tof_in_t1_aligned_mi.nii.gz')
    
    tof_in_t1_aligned = tof_in_t1_aligned.get_fdata()
    tof_in_t1_aligned_mi = tof_in_t1_aligned_mi.get_fdata()
    
    plot_original_images(tof_img, "tof")
    plot_aligned_images(tof_in_t1_aligned, "tof")
    plot_aligned_images(tof_in_t1_aligned_mi, "tof")
    
    
    
    """
    Below code is to get output for aligning t2 image on t1 image
    The output is generated by running below FLIRT SSL command on Ubuntu:
    
    flirt -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -in t2.nii -ref t1.nii -out t2_in_t1_aligned.nii.qz

    flirt -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -cost mutualinfo -in t1.nii -ref t2.nii -out t2_in_t1_aligned_mi.nii.gz
    """
    
    # Load output generated to align t2 on t1
    t2_in_t1_aligned = nib.load('images/t2_in_t1_aligned.nii.gz')
    
    # Load output generated to align t2 on t1 with -cost mutualinfo
    t2_in_t1_aligned_mi = nib.load('images/t2_in_t1_aligned_mi.nii.gz')
    
    t2_in_t1_aligned = t2_in_t1_aligned.get_fdata()
    t2_in_t1_aligned_mi = t2_in_t1_aligned_mi.get_fdata()
    
    plot_original_images(t2_img, "t2")
    plot_aligned_images(t2_in_t1_aligned, "t2")
    plot_aligned_images(t2_in_t1_aligned_mi, "t2")
    
    
    
    """
    Below code is to get output for aligning swi image on t1 image
    The output is generated by running below FLIRT SSL command on Ubuntu:
    
    flirt -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -in swi.nii -ref t1.nii -out swi_in_t1_aligned.nii.qz


    flirt -searchrx -180 180 -searchry -180 180 -searchrz -180 180 -cost mutualinfo -in t1.nii -ref swi.nii -out swi_in_t1_aligned_mi.nii.gz
    """
    
    # Load output generated to align swi on t1
    swi_in_t1_aligned = nib.load('images/swi_in_t1_aligned.nii.gz')
    
    # Load output generated to align swi on t1 with -cost mutualinfo
    swi_in_t1_aligned_mi = nib.load('images/swi_in_t1_aligned_mi.nii.gz')
    
    swi_in_t1_aligned = swi_in_t1_aligned.get_fdata()
    swi_in_t1_aligned_mi = swi_in_t1_aligned_mi.get_fdata()
    
    
    plot_original_images(swi_img, "swi")
    plot_aligned_images(swi_in_t1_aligned, "swi")
    plot_aligned_images(swi_in_t1_aligned_mi, "swi")